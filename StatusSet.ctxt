#BlueJ class context
comment0.params=currentVal\ maxVal\ centralSize\ barSize\ colors\ BGColors\ ava\ avaX\ avaY
comment0.target=StatusSet(double[],\ double[],\ double,\ double[],\ java.awt.Color[],\ java.awt.Color[],\ greenfoot.GreenfootImage,\ double,\ double)
comment0.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings,\ with\ the\n\ specified\ custom\ properties.\ Ensure\ the\ region\ of\ central\ radius\ around\n\ the\ indicated\ point\ lies\ entirely\ within\ the\ avatar\ image.\n\ \n\ @param\ currentVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ initial,\ or\ current\ value,\ for\ each\ bar,\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented;\ listed\ outwards.\n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n\ @param\ centralSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ central\ circle.\n\ @param\ barSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ each\ bar;\ listed\ outwards.\n\ @param\ colors\n\ \ \ \ \ \ \ \ \ \ \ \ The\ Color\ of\ each\ bar's\ filled\ portion,\ listed\ outwards.\n\ @param\ BGColors\n\ \ \ \ \ \ \ \ \ \ \ \ The\ Color\ of\ each\ bar's\ empty\ portion,\ listed\ outwards.\n\ @param\ ava\n\ \ \ \ \ \ \ \ \ \ \ \ The\ desired\ display\ image\ for\ the\ central\ core\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ set.\n\ @param\ avaX\n\ \ \ \ \ \ \ \ \ \ \ \ The\ x\ coordinate\ of\ the\ point\ around\ which\ the\ image\ will\ be\n\ \ \ \ \ \ \ \ \ \ \ \ cropped,\ in\ a\ circle.\n\ @param\ avaY\n\ \ \ \ \ \ \ \ \ \ \ \ The\ y\ coordinate\ of\ the\ point\ around\ which\ the\ image\ will\ be\n\ \ \ \ \ \ \ \ \ \ \ \ cropped,\ in\ a\ circle.\n
comment1.params=currentVal\ maxVal\ centralSize\ barSize\ colors\ BGColors
comment1.target=StatusSet(double[],\ double[],\ double,\ double[],\ java.awt.Color[],\ java.awt.Color[])
comment1.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings,\ with\ the\n\ specified\ custom\ properties.\n\ \n\ @param\ currentVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ initial,\ or\ current\ value,\ for\ each\ bar,\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented;\ listed\ outwards.\n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n\ @param\ centralSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ central\ circle.\n\ @param\ barSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ each\ bar;\ listed\ outwards.\n\ @param\ colors\n\ \ \ \ \ \ \ \ \ \ \ \ The\ Color\ of\ each\ bar's\ filled\ portion,\ listed\ outwards.\n\ @param\ BGColors\n\ \ \ \ \ \ \ \ \ \ \ \ The\ Color\ of\ each\ bar's\ empty\ portion,\ listed\ outwards.\n
comment10.params=value\ min\ max
comment10.target=double\ correctToRange(double,\ double,\ double)
comment10.text=\n\ Corrects\ a\ double\ to\ constrain\ it\ within\ an\ inclusive\ range.\n\ \n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ The\ double\ to\ be\ checked\ and\ corrected.\n\ @param\ min\n\ \ \ \ \ \ \ \ \ \ \ \ The\ inclusive\ minimum\ of\ the\ range\ which\ the\ number\ must\ be\n\ \ \ \ \ \ \ \ \ \ \ \ in.\n\ @param\ max\n\ \ \ \ \ \ \ \ \ \ \ \ The\ inclusive\ maximum\ of\ the\ range\ which\ the\ number\ must\ be\n\ \ \ \ \ \ \ \ \ \ \ \ in.\n\ @return\ double\ Either\ the\ original\ double\ if\ it\ is\ in-range,\ or\ the\n\ \ \ \ \ \ \ \ \ maximum\ or\ minimum\ if\ it\ is\ out\ of\ range\ depending\ on\ which\ side\n\ \ \ \ \ \ \ \ \ of\ the\ range\ it\ is\ on;\ closest\ boundary\ is\ returned.\n
comment11.params=value\ decimalPlaces
comment11.target=double\ roundPrecision(double,\ int)
comment11.text=\n\ Rounds\ a\ double\ to\ the\ given\ number\ of\ decimal\ places.\n\ \n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ The\ double\ to\ be\ rounded.\n\ @param\ decimalPlaces\n\ \ \ \ \ \ \ \ \ \ \ \ The\ number\ of\ decimal\ places\ to\ be\ rounded\ to.\n\ @return\ double\ The\ rounded\ value.\n
comment12.params=ava\ cenX\ cenY
comment12.target=void\ update(greenfoot.GreenfootImage,\ double,\ double)
comment12.text=\n\ Crops\ an\ image\ into\ a\ circle\ centered\ at\ the\ given\ coordinates,\ with\ the\n\ radius\ of\ the\ status\ set's\ central\ core,\ and\ saves\ it\ for\ drawing\ onto\n\ the\ central\ core.\ Ensure\ the\ region\ of\ central\ radius\ around\ the\n\ indicated\ point\ lies\ entirely\ within\ the\ avatar\ image.\n\ \n\ @param\ ava\n\ \ \ \ \ \ \ \ \ \ \ \ The\ desired\ display\ image\ for\ the\ central\ core\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ set.\n\ @param\ cenX\n\ \ \ \ \ \ \ \ \ \ \ \ The\ x\ coordinate\ of\ the\ point\ around\ which\ the\ image\ will\ be\n\ \ \ \ \ \ \ \ \ \ \ \ cropped,\ in\ a\ circle.\n\ @param\ cenY\n\ \ \ \ \ \ \ \ \ \ \ \ The\ y\ coordinate\ of\ the\ point\ around\ which\ the\ image\ will\ be\n\ \ \ \ \ \ \ \ \ \ \ \ cropped,\ in\ a\ circle.\n
comment13.params=barID\ change
comment13.target=boolean\ update(int,\ double)
comment13.text=\n\ Adjusts\ the\ value\ of\ the\ status\ monitored\ by\ the\ specified\ bar,\ by\ the\n\ given\ change.\ Manages\ the\ reset\ feature,\ by\ resetting\ and\ allocating\ the\n\ excess\ to\ status\ if\ reset\ is\ allowed\ and\ a\ specified\ increase\ exceeds\ the\n\ capacity.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ adjusted.\n\ @param\ change\n\ \ \ \ \ \ \ \ \ \ \ \ The\ amount\ by\ which\ to\ change\ the\ status\ value.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment14.params=barID\ target
comment14.target=boolean\ updateTo(int,\ double)
comment14.text=\n\ Sets\ the\ value\ of\ the\ status\ monitored\ by\ the\ specified\ bar\ to\ the\ given\n\ value.\ Negative\ values\ are\ ignored.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ adjusted.\n\ @param\ target\n\ \ \ \ \ \ \ \ \ \ \ \ The\ value\ to\ set\ the\ status\ value\ to.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment15.params=barID\ target\ max
comment15.target=boolean\ updateTo(int,\ double,\ double)
comment15.text=\n\ Sets\ the\ value\ of\ the\ status\ monitored\ by\ the\ specified\ bar\ to\ the\ given\n\ value,\ and\ then\ sets\ the\ new\ maximum\ given.\ Negative\ values\ are\ ignored.\n\ Status\ values\ are\ bounded\ to\ the\ initial\ maximum.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ adjusted.\n\ @param\ target\n\ \ \ \ \ \ \ \ \ \ \ \ The\ value\ to\ set\ the\ status\ value\ to.\n\ @param\ max\n\ \ \ \ \ \ \ \ \ \ \ \ The\ new\ maximum.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment16.params=barID
comment16.target=boolean\ toggleRegen(int)
comment16.text=\n\ Toggles\ the\ regeneration\ feature\ on\ if\ it\ is\ off,\ and\ vice\ versa,\ for\ the\n\ specified\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment17.params=barID\ value
comment17.target=boolean\ toggleRegen(int,\ boolean)
comment17.text=\n\ Toggles\ the\ regeneration\ feature\ on\ or\ off,\ as\ stated,\ for\ the\ specified\n\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ True\ if\ regeneration\ is\ to\ be\ turned\ on,\ false\ if\ it\ is\ to\ be\n\ \ \ \ \ \ \ \ \ \ \ \ turned\ off.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment18.params=barID\ rate
comment18.target=boolean\ setRegenRate(int,\ double)
comment18.text=\n\ Sets\ the\ rate\ of\ regeneration,\ per\ act()\ iteration,\ for\ a\ bar.\ The\ rate\n\ can\ be\ negative\ if\ the\ effect\ is\ needed.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ rate\n\ \ \ \ \ \ \ \ \ \ \ \ The\ change\ in\ status\ value\ per\ act()\ iteration,\ as\ part\ of\n\ \ \ \ \ \ \ \ \ \ \ \ regeneration.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment19.params=barID\ value
comment19.target=boolean\ toggleResetWhenFull(int,\ boolean)
comment19.text=\n\ Toggles\ the\ reset\ feature\ on\ or\ off,\ as\ stated,\ for\ the\ specified\ bar.\n\ When\ active,\ the\ bar\ will\ automatically\ reset\ to\ the\ value\ of\ the\ excess\n\ when\ the\ status\ overflows\ the\ maximum.\ If\ the\ knowledge\ of\ when\ this\n\ happens\ is\ needed,\ values\ sent\ in\ should\ be\ checked\ manually,\ as\ this\n\ feature\ only\ manages\ the\ visual\ and\ mathematical\ effects\ for\ the\n\ instance.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ True\ if\ reset\ is\ to\ be\ turned\ on,\ false\ if\ it\ is\ to\ be\ turned\n\ \ \ \ \ \ \ \ \ \ \ \ off.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment2.params=currentVal\ maxVal\ centralSize\ barSize
comment2.target=StatusSet(double[],\ double[],\ double,\ double[])
comment2.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings,\ with\ the\n\ specified\ custom\ properties.\n\ \n\ @param\ currentVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ initial,\ or\ current\ value,\ for\ each\ bar,\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented;\ listed\ outwards.\n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n\ @param\ centralSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ central\ circle.\n\ @param\ barSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ each\ bar;\ listed\ outwards.\n
comment20.params=barID\ value
comment20.target=boolean\ toggleGradient(int,\ boolean)
comment20.text=\n\ Toggles\ the\ gradient\ effect\ on\ bars\ on\ or\ off,\ for\ the\ specified\ bar.\n\ When\ on,\ bars\ will\ not\ be\ a\ uniform\ color,\ but\ have\ a\ radial\ gradient\n\ over\ them\ to\ improve\ visual\ interest.\ The\ gradient\ is\ based\ on\ the\ bar\n\ indicator's\ current\ color.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ True\ if\ gradient\ is\ to\ be\ turned\ on,\ false\ if\ it\ is\ to\ be\n\ \ \ \ \ \ \ \ \ \ \ \ turned\ off.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment21.params=barID\ value
comment21.target=boolean\ toggleAlert(int,\ boolean)
comment21.text=\n\ Toggles\ the\ alert\ feature\ on\ or\ off,\ as\ stated,\ for\ the\ specified\ bar.\n\ When\ active,\ if\ the\ status\ value\ falls\ below\ a\ certain\ percentage,\ the\n\ bar\ will\ flicker\ between\ the\ normal\ color\ and\ another\ color.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ True\ if\ alert\ is\ to\ be\ turned\ on,\ false\ if\ it\ is\ to\ be\ turned\n\ \ \ \ \ \ \ \ \ \ \ \ off.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment22.params=barID\ maxPercent\ color
comment22.target=boolean\ setCustomAlert(int,\ double,\ java.awt.Color)
comment22.text=\n\ Sets\ the\ properties\ of\ the\ alert\ feature.\ Percent\ is\ constrained\ between\n\ 0.0\ and\ 1.0,\ any\ number\ outside\ the\ range\ will\ be\ corrected\ to\ the\n\ closest\ boundary.\ The\ refresh\ rate\ is\ high,\ thus\ a\ low\ alpha\ value\ is\n\ recommended\ for\ color.\ It\ is\ also\ suggested\ that\ the\ hue\ be\ similar\ to\n\ the\ bar\ itself.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ maxPercent\n\ \ \ \ \ \ \ \ \ \ \ \ Maximum\ status\ at\ which\ alert\ will\ activate,\ as\ a\ decimal\n\ \ \ \ \ \ \ \ \ \ \ \ percentage\ of\ the\ maximum\ capacity\ between\ 0.0\ and\ 1.0.\n\ @param\ color\n\ \ \ \ \ \ \ \ \ \ \ \ Color\ of\ the\ alert\ flicker.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment23.params=barID\ value
comment23.target=boolean\ setMax(int,\ double)
comment23.text=\n\ Sets\ the\ maximum\ capacity\ of\ the\ status\ to\ a\ given\ value,\ for\ the\n\ specified\ bar.\ Negative\ values\ are\ ignored.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ to\ be\ affected.\n\ @param\ value\n\ \ \ \ \ \ \ \ \ \ \ \ The\ new\ maximum\ capacity.\n\ @return\ boolean\ True\ if\ the\ specified\ bar\ exists\ and\ the\ operation\n\ \ \ \ \ \ \ \ \ completed,\ otherwise\ false.\n
comment24.params=percent
comment24.target=void\ setChangeRateFactor(double)
comment24.text=\n\ Sets\ the\ rate,\ as\ a\ proportion\ of\ the\ commanded\ status\ change\ passed\ to\n\ any\ update\ method,\ at\ which\ the\ display\ value\ will\ approach\ the\ actual\n\ value\ of\ status.\ A\ percent\ greater\ than\ or\ equal\ to\ 1.0\ ensures\ near\n\ instantaneous\ response\ in\ the\ displayed\ value\ to\ any\ update.\ Negative\n\ values\ are\ ignored.\n\ \n\ @param\ percent\n\ \ \ \ \ \ \ \ \ \ \ \ The\ proportion\ of\ an\ update\ that\ the\ displayed\ value\ should\n\ \ \ \ \ \ \ \ \ \ \ \ change\ by\ every\ act()\ iteration,\ as\ a\ decimal\ percentage.\n
comment25.params=barID
comment25.target=java.lang.Double\ getStatus(int)
comment25.text=\n\ Retrieves\ the\ current\ true\ value\ of\ the\ status\ for\ the\ specified\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Double\ The\ value\ of\ the\ status\ if\ the\ specified\ bar\ exists\ and\n\ \ \ \ \ \ \ \ \ the\ operation\ completed,\ otherwise\ null.\n
comment26.params=barID
comment26.target=java.lang.Double\ getMax(int)
comment26.text=\n\ Retrieves\ the\ maximum\ capacity\ of\ the\ status\ for\ the\ specified\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Double\ The\ value\ of\ the\ maximum\ if\ the\ specified\ bar\ exists\ and\n\ \ \ \ \ \ \ \ \ the\ operation\ completed,\ otherwise\ null.\n
comment27.params=barID
comment27.target=java.lang.Double\ getRegenRate(int)
comment27.text=\n\ Retrieves\ the\ regeneration\ rate\ of\ the\ status\ for\ the\ specified\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Double\ The\ value\ of\ the\ regeneration\ rate\ if\ the\ specified\ bar\n\ \ \ \ \ \ \ \ \ exists\ and\ the\ operation\ completed,\ otherwise\ null.\n
comment28.params=barID
comment28.target=java.lang.Boolean\ isFull(int)
comment28.text=\n\ Checks\ if\ the\ status\ for\ the\ selected\ bar\ is\ full.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Boolean\ True\ or\ false,\ whether\ the\ status\ is\ full,\ if\ the\n\ \ \ \ \ \ \ \ \ specified\ bar\ exists\ and\ the\ operation\ completed,\ otherwise\ null.\n
comment29.params=barID
comment29.target=java.lang.Boolean\ isEmpty(int)
comment29.text=\n\ Checks\ if\ the\ status\ for\ the\ selected\ bar\ is\ empty.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Boolean\ True\ or\ false,\ whether\ the\ status\ is\ empty,\ if\ the\n\ \ \ \ \ \ \ \ \ specified\ bar\ exists\ and\ the\ operation\ completed,\ otherwise\ null.\n
comment3.params=currentVal\ maxVal\ centralSize\ barSize
comment3.target=StatusSet(double[],\ double[],\ double,\ double)
comment3.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings,\ with\ the\n\ specified\ custom\ properties.\n\ \n\ @param\ currentVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ initial,\ or\ current\ value,\ for\ each\ bar,\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented;\ listed\ outwards.\n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n\ @param\ centralSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ central\ circle.\n\ @param\ barSize\n\ \ \ \ \ \ \ \ \ \ \ \ The\ uniform\ radius\ of\ all\ the\ bars.\n
comment30.params=barID
comment30.target=java.lang.Double\ getBarRadius(int)
comment30.text=\n\ Retrieves\ the\ radius\ of\ the\ selected\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Double\ The\ radius\ of\ the\ specified\ bar,\ if\ the\ specified\ bar\n\ \ \ \ \ \ \ \ \ exists\ and\ the\ operation\ completed,\ otherwise\ null.\n
comment31.params=barID
comment31.target=java.awt.Color[]\ getBarColors(int)
comment31.text=\n\ Retrieves\ an\ array\ of\ two\ colors\ in\ the\ order;\ indicator\ filled\ color,\n\ empty\ bar\ background\ color;\ of\ indices\ 0\ and\ 1\ respectively,\ for\ the\n\ specified\ bar.\n\ \n\ @param\ barID\n\ \ \ \ \ \ \ \ \ \ \ \ The\ identifying\ index\ of\ the\ status\ bar\ referenced.\n\ @return\ Color[]\ An\ array\ of\ length\ two\ containing\ the\ fill\ color\ at\ index\n\ \ \ \ \ \ \ \ \ 0\ and\ the\ background\ color\ at\ index\ 1,\ if\ the\ specified\ bar\n\ \ \ \ \ \ \ \ \ exists\ and\ the\ operation\ completed,\ otherwise\ null.\n
comment32.params=
comment32.target=double\ getCentralRadius()
comment32.text=\n\ Retrieves\ the\ radius\ of\ the\ central\ region\ of\ the\ status\ set.\n\ \n\ @return\ double\ The\ radius\ of\ the\ central\ region.\n
comment33.params=w
comment33.target=void\ addedToWorld(greenfoot.World)
comment33.text=\n\ Runs\ upon\ being\ added\ as\ an\ Actor\ to\ a\ Greenfoot\ world.\ Sets\ up\ the\n\ initial\ status\ set.\n
comment34.params=
comment34.target=void\ act()
comment34.text=\n\ Manages\ the\ animation\ of\ the\ bars\ for\ regeneration\ and\ updating\ of\ status\n\ values.\n
comment4.params=currentVal\ maxVal
comment4.target=StatusSet(double[],\ double[])
comment4.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings.\n\ \n\ @param\ currentVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ initial,\ or\ current\ value,\ for\ each\ bar,\ of\ the\ status\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented;\ listed\ outwards.\n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n
comment5.params=maxVal
comment5.target=StatusSet(double[])
comment5.text=\n\ Constructs\ a\ StatusSet,\ a\ set\ of\ concentric\ status\ bar\ rings.\n\ \n\ @param\ maxVal\n\ \ \ \ \ \ \ \ \ \ \ \ The\ maximum\ value,\ for\ each\ bar,\ that\ the\ status\ which\ is\n\ \ \ \ \ \ \ \ \ \ \ \ being\ represented\ can\ be\ at;\ listed\ outwards.\n
comment6.params=cenX\ cenY\ radius
comment6.target=java.awt.geom.Arc2D.Double\ getCircle(double,\ double,\ double)
comment6.text=\n\ Creates\ and\ returns\ a\ drawn\ circle\ path\ centered\ at\ the\ given\n\ coordinates,\ of\ the\ given\ radius.\n\ \n\ @param\ cenX\n\ \ \ \ \ \ \ \ \ \ \ \ The\ x\ coordinate\ of\ the\ center.\n\ @param\ cenY\n\ \ \ \ \ \ \ \ \ \ \ \ The\ y\ coordinate\ of\ the\ center.\n\ @param\ radius\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ circle.\n\ @return\ Arc2D.Double\ A\ closed\ circular\ path.\n
comment7.params=cenX\ cenY\ radius\ init\ angle
comment7.target=java.awt.geom.Arc2D.Double\ getPie(double,\ double,\ double,\ double,\ double)
comment7.text=\n\ Creates\ and\ returns\ a\ drawn\ pie\ shape\ path\ centered\ at\ the\ given\n\ coordinates,\ of\ the\ given\ radius,\ with\ the\ solid,\ non-indented\ portion\n\ beginning\ at\ the\ given\ initial\ angle\ and\ ending\ at\ the\ specified\ angle\n\ away.\n\ \n\ @param\ cenX\n\ \ \ \ \ \ \ \ \ \ \ \ The\ x\ coordinate\ of\ the\ center.\n\ @param\ cenY\n\ \ \ \ \ \ \ \ \ \ \ \ The\ y\ coordinate\ of\ the\ center.\n\ @param\ radius\n\ \ \ \ \ \ \ \ \ \ \ \ The\ radius\ of\ the\ pie.\n\ @param\ init\n\ \ \ \ \ \ \ \ \ \ \ \ Initial\ angle\ of\ the\ outer\ arc,\ in\ degrees.\n\ @param\ angle\n\ \ \ \ \ \ \ \ \ \ \ \ The\ angular\ extent\ of\ the\ outer\ arc,\ in\ degrees.\n\ @return\ Arc2D.Double\ A\ closed\ pie\ shape\ path.\n
comment8.params=
comment8.target=void\ update()
comment8.text=\n\ Draws\ the\ graphics\ for\ the\ set\ of\ status\ rings\ for\ the\ current\ status\n\ values,\ and\ displays\ them\ on-screen.\ Intended\ for\ use\ in\ an\ iterative\n\ method\ such\ as\ Actor's\ act()\ to\ resemble\ animation.\n
comment9.params=array
comment9.target=double\ sumArray(double[])
comment9.text=\n\ Adds\ all\ the\ elements\ in\ an\ array\ of\ doubles\ and\ returns\ the\ sum.\n\ \n\ @param\ array\n\ \ \ \ \ \ \ \ \ \ \ \ An\ array\ of\ doubles.\n\ @return\ double\ The\ sum\ of\ the\ array\ elements.\n
numComments=35
